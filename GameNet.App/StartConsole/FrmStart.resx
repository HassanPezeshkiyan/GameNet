<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        TkSuQmCC
</value>
  </data>
  <metadata name="timer1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <metadata name="timer2.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>104, 17</value>
  </metadata>
</root>