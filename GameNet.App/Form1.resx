<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBoxUser.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>